# syntax=docker/dockerfile:1 
version: "3"



networks:
  weather-api-otel:



services:
  prometheus:
    container_name: prometheus
    hostname: prometheus
    restart: always
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./docker/prometheus.yaml:/etc/prometheus/prometheus.yml
    networks:
      - weather-api-otel
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --no-verbose --tries=1 --timeout=5 http://localhost:9090/-/healthy || exit 1"]
      start_interval: 2s
      interval: 10s
      timeout: 5s
      retries: 3

  grafana:
    container_name: grafana
    hostname: grafana
    restart: always
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    depends_on:
      prometheus:
        condition: service_healthy
    networks:
      - weather-api-otel
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --no-verbose --tries=1 --timeout=5 http://localhost:3000/api/health || exit 1"]
      start_interval: 2s
      interval: 10s
      timeout: 5s
      retries: 3

  # jaeger:
  #   container_name: jaeger
  #   hostname: jaeger
  #   restart: always
  #   image: jaegertracing/all-in-one:latest
  #   ports:
  #     - 16686:16686
  #     - 14268
  #     - 14250
  #   networks:
  #     - weather-api-otel
  #   healthcheck:
  #     test: ["CMD-SHELL", "wget --spider --no-verbose --tries=1 --timeout=5 http://localhost:16686 || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  zipkin:
    container_name: zipkin
    hostname: zipkin
    restart: always
    image: openzipkin/zipkin:latest
    ports:
      - 9411:9411 # Port used for the Zipkin UI and HTTP Api
    environment:
      - STORAGE_TYPE=mem
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    networks:
      - weather-api-otel
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --no-verbose --tries=1 --timeout=5 http://localhost:9411/health || exit 1"]
      start_interval: 2s
      interval: 10s
      timeout: 5s
      retries: 3


  otel-collector:
    container_name: otel-collector
    hostname: otel-collector
    restart: always
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - 1888:1888   # pprof extension
      - 8888:8888   # Prometheus metrics exposed by the collector
      - 8889:8889   # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317   # OTLP gRPC receiver
      - 55679:55679 # zpages extension
    volumes:
      - ./docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    networks:
      - weather-api-otel
    depends_on:
      - zipkin
      # - jaeger

  orchestrator-api:
    container_name: orchestrator-api
    hostname: orchestrator-api
    restart: always
    image: aleroxac/orchestrator-api:v1
    build:
      dockerfile: Dockerfile
      context: .
      tags:
        - aleroxac/orchestrator-api:v1
      args:
        - TARGET_API=orchestrator-api
        - API_PORT=8081
    ports:
      - 8081:8081
    env_file:
      - .env
    depends_on:
      - otel-collector
    networks:
      - weather-api-otel

  input-api:
    container_name: input-api
    hostname: input-api
    restart: always
    image: aleroxac/input-api:v1
    build:
      dockerfile: Dockerfile
      context: .
      tags:
        - aleroxac/input-api:v1
      args:
        - TARGET_API=input-api
        - API_PORT=8080
    ports:
      - 8080:8080
    env_file:
      - .env
    depends_on:
      - orchestrator-api
    networks:
      - weather-api-otel
